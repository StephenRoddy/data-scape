{"version":3,"sources":["logo.svg","components/navBar.js","components/playSound.js","components/ticker.js","components/charts/apxChrt.js","components/charts/apxRadar.js","components/charts/apxHeat.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","class","href","PlaySound","synth","Tone","toDestination","type","onClick","e","preventDefault","triggerAttackRelease","console","log","Ticker","state","today","this","data","name","classs","React","Component","ApxChrt","dataIn","options","chart","id","xaxis","categories","date_series","series","className","width","ApxRadar","height","dataLabels","enabled","plotOptions","radar","size","polygons","strokeColors","fill","colors","markers","strokeColor","strokeWidth","tooltip","y","formatter","val","yaxis","tickAmount","labels","i","d","Date","getDay","setState","App","error","isLoaded","total_death_series","total_cases_series","confirmed_deaths_series","confirmed_cases_series","today_tot_deaths","today_tot_cases","today_con_deaths","today_con_cases","fetch","then","res","json","result","tot_d","tot_c","con_d","con_c","date","features","length","attributes","TotalCovidDeaths","TotalConfirmedCovidCases","ConfirmedCovidDeaths","ConfirmedCovidCases","total_deaths_series","reverse","total_case_series","total_deaths","total_cases","today_deaths","today_cases","items","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0abade2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nconst Navbar = ( props ) => {\nreturn (\n  <nav class=\"navbar mb-4 navbar-light shadow-sm ml-2 mr-2 mt-2\">\n\n    <a class=\"navbar-brand\" href=\"#\"><h3>Multimodal Data-analytics</h3><h5 class =\"text-wrap\">API data from COVID-19</h5></a>\n  </nav>\n  )\n};\n\nexport default Navbar\n","//toneCheck.js\nimport React from 'react';\nimport * as Tone from 'tone';\n\nfunction PlaySound(props){\n    const synth = new Tone.Synth().toDestination();\n      function handleClick(e) {\n        e.preventDefault();\n        //play a middle 'C' for the duration of an 8th note\n        synth.triggerAttackRelease(\"C4\", \"8n\");\n        console.log('The button was clicked.');  }\n      return(\n        <button type=\"button\" class =\"btn btn-primary mt-3\" onClick={handleClick}>Audio Test</button>\n    );\n}\nexport default PlaySound\n","//today.js\nimport React from 'react';\n\nclass Ticker extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {props};\n  }\n  render(){\n    // extracting props\n    const today = this.props.data;\n    const name = this.props.name;\n\n\n    return(\n      <div class=\"col-sm mt-3 mb-3\">\n      <div class=\"opacity-5 shadow-sm\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">{name}</h5>\n          <h6 class=\"card-subtitle text-muted\">Ireland</h6>\n          <div> <h2>{today}</h2></div>\n\n      </div>\n      </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Ticker\n      //    <div> <h2>{this.props.data[data.length-1].value}</h2></div>\n  //    <div> <h2>{this.props[5].value}</h2></div>\n","//apexC\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass ApxChrt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataIn: this.props.dataIn,\n      options: {\n        chart: {\n          id: \"Line-Chart\"\n        },\n        xaxis: {\n          categories: this.props.date_series\n\n        }\n      },\n      series: [\n        {\n          name: this.props.name,\n          data: this.props.dataIn\n        }\n      ]\n    };\n  }\n\n\n  render() {\n\n  //  console.log(this.state.dataIn);\n\n    return (\n      <div class=\"opacity-5 shadow-sm\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">{this.props.name}</h5>\n          <h6 class=\"card-subtitle text-muted\">Past 7 Days</h6>\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.state.options}\n              series={this.state.series}\n              type=\"line\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ApxChrt;\n","//ApxHeat\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\n\n\nclass ApxRadar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const dataIn = this.props.data;\n    console.log(\"Here is the series we will use: \" + dataIn);\n    this.state = {\n\n      series: [{\n        name: 'Series 1',\n        data: dataIn,\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'radar',\n        },\n        dataLabels: {\n          enabled: true\n        },\n        plotOptions: {\n          radar: {\n            size: 140,\n            polygons: {\n              strokeColors: '#e9e9e9',\n              fill: {\n                colors: ['#f8f8f8', '#fff']\n              }\n            }\n          }\n        },\n\n        colors: ['#FF4560'],\n        markers: {\n          size: 4,\n          colors: ['#fff'],\n          strokeColor: '#FF4560',\n          strokeWidth: 2,\n        },\n        tooltip: {\n          y: {\n            formatter: function(val) {\n              return val\n            }\n          }\n        },\n        xaxis: {\n          categories: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n        },\n        yaxis: {\n          tickAmount: 7,\n          labels: {\n            formatter: function(val, i) {\n              if (i % 2 === 0) {\n                return val\n              } else {\n                return ''\n              }\n            }\n          }\n        }\n      },\n\n\n    };\n  }\n\n  componentDidMount(){\n    // When the component mounts make sure that the days of the week reflect the days in teh array\n\n  let d = new Date();\n\n    if (d.getDay() == 1){\n      this.setState({\n        options: {\n          xaxis: {\n            categories: ['Sunday', 'Saturday', 'Friday', 'Thursday', 'Wednesday', 'Tuesday', 'Monday']\n                }\n              }\n            })\n          } else if (d.getDay() == 2){\n            this.setState({\n              options: {\n                  xaxis: {\n                      categories: ['Monday','Sunday', 'Saturday', 'Friday', 'Thursday', 'Wednesday', 'Tuesday']\n                      }\n                    }\n                  })\n                } else if (d.getDay() == 3){\n                  this.setState({\n                    options: {\n                        xaxis: {\n                          categories: ['Tuesday','Monday','Sunday', 'Saturday', 'Friday', 'Thursday', 'Wednesday']\n                            }\n                          }\n                        })\n                      } else if (d.getDay() == 4){\n\n                        this.setState({\n                        options: {\n                            xaxis: {\n                              categories: ['Wednesday','Tuesday','Monday','Sunday', 'Saturday', 'Friday', 'Thursday']\n                                  }\n                                }\n                              })\n                            } else if (d.getDay() == 5){\n                              this.setState({\n                                options: {\n                                    xaxis: {\n                                        categories: ['Thursday','Wednesday','Tuesday','Monday','Sunday', 'Saturday', 'Friday']\n                                        }\n                                      }\n                                    })\n                                  } else if (d.getDay() == 6){\n                                    this.setState({\n                                      options: {\n                                          xaxis: {\n                                            categories: ['Friday', 'Thursday','Wednesday','Tuesday','Monday','Sunday', 'Saturday']\n                                              }\n                                            }\n                                          })\n                                        } else if (d.getDay() == 0){\n                                          this.setState({\n                                            options: {\n                                                xaxis: {\n                                                  categories: ['Saturday','Friday', 'Thursday','Wednesday','Tuesday','Monday','Sunday']\n                                                    }\n                                                  }\n                                                })\n                                              }\n  }\n\n  render() {\n\n    return (\n      <div class=\"opacity-5 shadow\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">{this.props.name}</h5>\n          <h6 class=\"card-subtitle text-muted\">Past 7 days</h6>\n        <div id=\"chart\">\n          <Chart options={this.state.options} series={this.state.series} type=\"radar\" height={350} />\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\n  export default ApxRadar\n","//ApxHeat\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\n\n\nclass ApxHeat extends React.Component {\n        constructor(props) {\n          super(props);\n\n          this.state = {\n\n            series: [{\n              name: 'Metric1',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric2',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric3',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric4',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric5',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric6',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric7',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric8',\n              data:  this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            },\n            {\n              name: 'Metric9',\n              data: this.generateData(18, {\n                min: 0,\n                max: 90\n              })\n            }\n            ],\n            options: {\n              chart: {\n                height: 200,\n                type: 'heatmap',\n              },\n              dataLabels: {\n                enabled: false\n              },\n              colors: [\"#008FFB\"],\n            //  title: {\n          //      text: 'HeatMap Chart (Single color)'\n            //  },\n            },\n\n\n          };\n        }\n\n        generateData(count, yrange) {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n          var x = 'w' + (i + 1).toString();\n          var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n          series.push({\n            x: x,\n            y: y\n          });\n          i++;\n        }\n        return series;\n        }\n\n        render() {\n          return (\n            <div class=\"opacity-5 shadow\">\n              <div class=\"card-body\">\n                <h5 classs=\"card-title\">{this.props.name}</h5>\n                <h6 class=\"card-subtitle text-muted\">2020</h6>\n              <div id=\"chart\">\n              <Chart options={this.state.options} series={this.state.series} type= \"heatmap\" height={this.state.height} />\n              </div>\n            </div>\n            </div>\n          );\n        }\n      }\n\n  export default ApxHeat\n","/* //Original Imports\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n*/\n// Import React\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\n// Import d3\n/*\nimport * as d3 from \"d3\";\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition';\n*/\n\n// Import Tone\nimport * as Tone from 'tone';\n\n// Import Components\n//import XYAxis from './components/axis/xy-axis.js';\n//import Line from './components/line/line.js';\nimport Navbar from './components/navBar.js';\nimport PlaySound from './components/playSound.js';\n\n// Data Ticker Imports\nimport Ticker from './components/ticker.js';\n\n//  Chart Imports\n//import BarChart from './components/charts/bar.js';\nimport ApxChrt from './components/charts/apxChrt.js';\nimport ApxHeat from './components/charts/apxHeat.js';\nimport ApxRadar from './components/charts/apxRadar.js';\n// Import Audio  to play\nimport AudioPlay from './scripts/audioPlay.js';\n\n// Import Bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\n// Impiort Css and Images\nimport logo from './logo.svg';\nimport './App.css';\n\n//Time = Date.now() //epoch\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      width: 0,\n      height: 0,\n      data: [],\n\n      date_series: [], // Dates\n\n      total_death_series: [], //total death series\n      total_cases_series: [], //total case series\n      confirmed_deaths_series: [], //confirmed deaths series\n      confirmed_cases_series: [], //confirmed cases series\n\n      today_tot_deaths:0, //today's total deaths\n      today_tot_cases:0,  //today's total cases\n      today_con_deaths:0, //today's confirmed deaths\n      today_con_cases:0,  //today's confirmed deaths\n    }\n  }\n\n  componentDidMount(){\n\n    // Get COVID-19 Total Deaths, Total Confirmed Cases and Dates\n  fetch('https://services1.arcgis.com/eNO7HHeQ3rUcBllm/arcgis/rest/services/CovidStatisticsProfileHPSCIrelandOpenData/FeatureServer/0/query?where=1%3D1&outFields=Date,TotalConfirmedCovidCases,ConfirmedCovidCases,ConfirmedCovidDeaths,TotalCovidDeaths&returnGeometry=false&outSR=4326&f=json') // use a header for the api keey value pair\n    .then(res => res.json())\n    .then(\n      (result) => {\n//Process data on result\n        let tot_d = []; // total deaths\n        let tot_c = []; // total cases\n\n        let con_d = []; // confirmed deaths\n        let con_c = []; // confirmed cases\n\n        let date = []; //date\n\n        let i;\n        for (i=0; i < 7;i++){\n          tot_d[i] = result.features[result.features.length-(1+i)].attributes.TotalCovidDeaths;\n\n          tot_c[i]  = result.features[result.features.length-(1+i)].attributes.TotalConfirmedCovidCases;\n\n          con_d[i] = result.features[result.features.length-(1+i)].attributes.ConfirmedCovidDeaths;\n          con_c[i] = result.features[result.features.length-(1+i)].attributes.ConfirmedCovidCases;\n\n          date[i] = result.features[result.features.length-(1+i)].attributes.Date;\n        }\n\n\n        // NB. Need to reverse these array as we filled them backwards from the end of the original data\n        // I just reverse the arrays below when we set state. Be careful to account for todays data when doing This\n        // don't accidentally pull the figures from a week ago for today\n\n      this.setState({\n        isLoaded: true,\n        data: result,\n        total_deaths_series: tot_d.reverse(),\n        total_case_series:  tot_c.reverse(),\n        confirmed_deaths_series: con_d.reverse(),\n        confirmed_cases_series: con_c.reverse(),\n        today_tot_deaths: tot_d[tot_d.length -1],\n        today_tot_cases:  tot_c[tot_c.length -1],\n        today_con_deaths: con_d[con_d.length -1],\n        today_con_cases: con_c[con_c.length -1],\n        date_series: date,\n        width:400,\n        height:200\n      }, () => console.log(\"Confirmed Deaths: \" +con_d+\" Confirmed Cases: \"+con_c+ \" Total deaths: \" + this.state.total_deaths +\" Total cases: \"+ this.state.total_cases +\" Today's deaths: \"+ this.state.today_deaths +\" Today's cases:  \"+ this.state.today_cases ));\n\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n\n  render() {\n\n  let total_deaths = this.state.total_deaths;\n  let total_cases = this.state.total_cases;\n\n  const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n   return (\n      <div class=\"container-fluid\">\n      {<Navbar />}\n\n        <div class=\"row\">\n          <div class=\"col-sm mt-3 mb-3\">\n                 <ApxChrt\n                 dataIn={this.state.total_case_series}\n                 date={this.state.date_series}\n                 name= {\"Total Confirmed Cases\"}\n                 />\n          </div>\n\n          <div class=\"col-sm  mt-3 mb-3\">\n          {<Ticker data={this.state.today_con_cases} name ={\"New Cases Today\"} />}\n          {<Ticker data={this.state.today_con_deaths} name ={\"New Deaths Today\"} />}\n\n          </div>\n\n          <div class=\"col-sm  mt-3 mb-3\">\n          {<Ticker data={this.state.today_tot_cases} name ={\"Total Cases\"} />}\n          {<Ticker data={this.state.today_tot_deaths} name ={\"Total Deaths\"} />}\n\n          </div>\n\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-sm  mt-3 mb-3\">\n\n\n               <ApxChrt\n               dataIn={this.state.total_deaths_series}\n               date={this.state.date_series}\n               name= {\"Total Confirmed Deaths\"}/>\n\n           {<PlaySound />}\n            </div>\n\n            <div class=\"col-sm mt-3 mb-3\">\n            <ApxRadar type= \"radar\" name ={\"New COVID-19 Cases\"} data={this.state.confirmed_cases_series}/>\n\n            </div>\n        </div>\n</div>\n        );\n    }\n  }\n}\nexport default App;\n//\n//  <ApxChrt dataIn={total_deaths} width={this.state.width} height={this.state.height} />\n// <BarChart data={total_deaths} width={this.state.width} height={this.state.height} />\n//            <ApxHeat type= \"heatmap\" name ={\"Covid Heatmap\"}/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}