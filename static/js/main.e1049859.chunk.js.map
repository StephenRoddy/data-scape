{"version":3,"sources":["logo.svg","components/navBar.js","components/sonify2.js","components/sonify3.js","components/sonify4_noise.js","components/ticker.js","components/charts/apxChrt.js","components/charts/apxRadar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","class","href","target","SonifyTwo","state","j","dtaIn","this","data","hiDatPnt","Math","max","dMin","min","dMax","console","log","z","time","dataTime","synth2","Tone","toDestination","part2","now2","note","triggerAttackRelease","type","onClick","e","preventDefault","stop","start","title","Component","SonifyThree","part3","SonifyFourNoise","i","length","autoFilter","noise","connect","k","frequency","rampTo","Ticker","today","name","classs","React","ApxChrt","options","chart","id","xaxis","categories","time_labels","yaxis","forceNiceScale","series","time_series","className","width","ApxRadar","height","dataLabels","enabled","plotOptions","radar","size","polygons","strokeColors","fill","colors","markers","strokeColor","strokeWidth","tooltip","y","formatter","val","tickAmount","labels","dtDay","dateData","daySeries","dateIn","date","weekDays","Date","getDay","setState","App","error","isLoaded","date_series","full_date_series","total_death_series","total_cases_series","confirmed_deaths_series","confirmed_cases_series","full_death_series","full_case_series","full_months","seven_days","today_tot_deaths","today_tot_cases","today_con_deaths","today_con_cases","fetch","then","res","json","result","tot_d","tot_c","con_d","con_c","features","attributes","TotalCovidDeaths","TotalConfirmedCovidCases","ConfirmedCovidDeaths","ConfirmedCovidCases","days","full_d","full_c","full_date","data_length","l","months","getMonth","new_ar","total_deaths_series","reverse","total_case_series","total_deaths","total_cases","items","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e1049859.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\n\nconst Navbar = ( props ) => {\nreturn (\n  <nav class=\"navbar mb-4 navbar-light shadow-sm ml-2 mr-2 mt-2\">\n\n  <a class=\"navbar-brand\" href=\"#\"><h3>Sonification Framework for Ireland's Covid-19 Outbreak</h3> <a href =\"https://covid19ireland-geohive.hub.arcgis.com/\" target=\"_blank\"> <h5 class =\"text-wrap\">Data from Ireland's COVID-19 Data Hub</h5></a></a>\n  </nav>\n  )\n};\n\nexport default Navbar\n","//toneCheck.js\n// SImillar to sonify1 but we do a re-rangeing of the data first here to make sure it is audible.\n\nimport React, { Component } from \"react\";\nimport * as Tone from 'tone';\n\nclass SonifyTwo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n}\n\n\nrender() {\n\n  //rescale the incoming data array to usable frequencies\n  const dtaIn = this.props.data;\n  const data =[];\n  const stuff = [0,1,2,3,4,8,7,9,5,6];\n\n\n // Rescalling of data on basis of high and low points\n  let hiDatPnt = Math.max(...dtaIn); // get highest point in the data\n  let dMin = Math.min(...dtaIn); // get lowest point in the data\n  let dMax = 1.5* hiDatPnt; //The highest pitch will always equal 1.5 times the highest number in array\n  let nMin = 220;\n  let nMax = 880;\n\n  let j;\n  //rescaling function\n  for(j=0; j<7; j++){\n    data[j] = (((nMax-nMin)*(dtaIn[j] - dMin))/(dMax-dMin)) + nMin;\n  }\n  console.log(data);\n\n// Need to create time pitch pairs.\n  const time = [0, 1, 2, 3, 4, 5, 6]; //Sequencing array to be integrated with data array\n  let dataTime =[];\n  let z;\n  for(z=0; z<7; z++){\n    dataTime[z] = [time[z], data[z]];\n  } // Create the time note pairs for the part.\n\n\n\n  const synth2 = new Tone.Synth().toDestination();\n  const now2 = Tone.now();\n\n  const part2 = new Tone.Part(((now2, note) => {\n  \tsynth2.triggerAttackRelease(note, \"8n\", now2);\n  }), dataTime);\n\n  function handleClick(e) {\n    e.preventDefault();\n    Tone.start(); // no audio will play at all until we initiate tone.\n  //  Tone.Transport.stop();\n  //  Tone.Transport.start();\n    part2.stop();\n    part2.start();\n\n    console.log('The button was clicked.');\n\n  }\n\n      return(\n        <button type=\"button\" class =\"btn btn-primary mt-3\" onClick={handleClick}>{this.props.title}</button>\n    );\n  }\n}\n\n    export default SonifyTwo\n\n\n\n// The map() method creates a new array populated with the results of calling\n// a provided function on every element in the calling array.\n//\n// pass a function to map\n// const map1 = array1.map(x => x * 2);\n//\n// console.log(map1);\n// expected output: Array [2, 8, 18, 32]\n//\n\n\n/*\nlet z=0;\nfor (z = 0; z < 7; z++) {\n  synth.triggerAttackRelease(data[z], \"8n\");\n}\n\n*/\n/*\n\nfunction PlaySound(props){\n    const synth = new Tone.Synth().toDestination();\n      function handleClick(e) {\n        e.preventDefault();\n        //play a middle 'C' for the duration of an 8th note\n        synth.triggerAttackRelease(\"C4\", \"8n\");\n        console.log('The button was clicked.');  }\n      return(\n        <button type=\"button\" class =\"btn btn-primary mt-3\" onClick={handleClick}>Audio Test</button>\n    );\n}\nexport default PlaySound\n*/\n","//toneCheck.js\n// SImillar to sonify1 but we do a re-rangeing of the data first here to make sure it is audible.\n// However this rescaling is always in the range of 220 to 880, so the hegith of the pitch doesn't tell you much\n// Rather its the steepness of pitch changes.\n\nimport React, { Component } from \"react\";\nimport * as Tone from 'tone';\n\nclass SonifyThree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n}\n\n\nrender() {\n\n  //rescale the incoming data array to usable frequencies\n  const dtaIn = this.props.data;\n  const data =[];\n\n  // Rescalling of data on basis of high and low points\n  let hiDatPnt = Math.max(...dtaIn); // get highest point in the data\n  let dMin = Math.min(...dtaIn); // get lowest point in the data\n  let dMax = 1.5* hiDatPnt; //The highest pitch will always equal 1.5 times the highest number in array\n  let nMin = 220;\n  let nMax = 880;\n\n\n  let j;\n  //rescaling function\n  for(j=0; j<7; j++){\n    data[j] = (((nMax-nMin)*(dtaIn[j] - dMin))/(dMax-dMin)) + nMin;\n  }\n  console.log(data);\n\n// Need to create time pitch pairs.\n  const time = [0, 1, 2, 3, 4, 5, 6]; //Sequencing array to be integrated with data array\n  let dataTime =[];\n  let z;\n  for(z=0; z<7; z++){\n    dataTime[z] = [time[z], data[z]];\n  } // Create the time note pairs for the part.\n\n\n\n  const synth2 = new Tone.Synth().toDestination();\n  const now2 = Tone.now();\n\n  const part3 = new Tone.Part(((now2, note) => {\n  \tsynth2.triggerAttackRelease(note, \"8n\", now2);\n  }), dataTime);\n\n  function handleClick(e) {\n    e.preventDefault();\n    Tone.start(); // no audio will play at all until we initiate tone.\n  //  Tone.Transport.stop();\n  //  Tone.Transport.start();\n    part3.stop();\n    part3.start();\n\n\n    console.log('The button was clicked.');\n\n  }\n\n      return(\n        <button type=\"button\" class =\"btn btn-primary mt-3\" onClick={handleClick}>{this.props.title}</button>\n    );\n  }\n}\n\n    export default SonifyThree\n\n\n\n// The map() method creates a new array populated with the results of calling\n// a provided function on every element in the calling array.\n//\n// pass a function to map\n// const map1 = array1.map(x => x * 2);\n//\n// console.log(map1);\n// expected output: Array [2, 8, 18, 32]\n//\n\n\n/*\nlet z=0;\nfor (z = 0; z < 7; z++) {\n  synth.triggerAttackRelease(data[z], \"8n\");\n}\n\n*/\n/*\n\nfunction PlaySound(props){\n    const synth = new Tone.Synth().toDestination();\n      function handleClick(e) {\n        e.preventDefault();\n        //play a middle 'C' for the duration of an 8th note\n        synth.triggerAttackRelease(\"C4\", \"8n\");\n        console.log('The button was clicked.');  }\n      return(\n        <button type=\"button\" class =\"btn btn-primary mt-3\" onClick={handleClick}>Audio Test</button>\n    );\n}\nexport default PlaySound\n*/\n","//toneCheck.js\n// SImillar to sonify1 but we do a re-rangeing of the data first here to make sure it is audible.\n\nimport React, { Component } from \"react\";\nimport * as Tone from 'tone';\n\nclass SonifyFourNoise extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n}\n\n\nrender() {\n\n  //rescale the incoming data array to usable frequencies\n  const dtaIn = this.props.data;\n  const data =[];\n\n // Rescalling of data on basis of high and low points\n  let hiDatPnt = Math.max(...dtaIn); // get highest point in the data\n  let dMin = Math.min(...dtaIn); // get lowest point in the data\n  let dMax = 1.5* hiDatPnt; //The highest pitch will always equal 1.5 times the highest number in array\n  let nMin = 0;\n  let nMax = 10;  // map thius into a range that's useful for the autofilter\n\n  let i;\n  //rescaling function\n  for(i=0; i<dtaIn.length; i++){\n    data[i] = (((nMax-nMin)*(dtaIn[i] - dMin))/(dMax-dMin)) + nMin;\n  }\n\n  const autoFilter = new Tone.AutoFilter().toDestination().start();\n  const noise = new Tone.Noise().connect(autoFilter);\n\n  function handleClick(e) {\n    e.preventDefault();\n    Tone.start(); // no audio will play at all until we initiate tone.\n\n    if(noise.state == \"started\"){ // On press turn it off if it's on. turn it on if its off\n    noise.stop();\n    } else{\n    //autoFilter.frequency.rampTo(500,50);\n\n    noise.start();\n\n    let k =0; //Data Mapping Loop w/ Timing element\n    const loop = new Tone.Loop((time) => {\n    \t// triggered every 16th note.\n      autoFilter.frequency.rampTo(data[k],.5);\n      k++;\n    \tconsole.log(time);\n    }, \"16n\").start(0);\n  }\n\n  }\n\n      return(\n        <button type=\"button\" class =\"btn btn-primary mt-3\" onClick={handleClick}>{this.props.title}</button>\n    );\n  }\n}\n    export default SonifyFourNoise\n\n\n    /*\n        let j;  //Data Mapping Loop\n        for(j=0; j<data.length; j++){\n          autoFilter.frequency.rampTo(data[j],.5);\n          console.log(data[j]);\n        }*/\n","//today.js\nimport React from 'react';\n\nclass Ticker extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {props};\n  }\n  render(){\n    // extracting props\n    const today = this.props.data;\n    const name = this.props.name;\n\n\n    return(\n      <div class=\"col-sm mt-3 mb-3\">\n      <div class=\"opacity-5 shadow-sm\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">{name}</h5>\n          <h6 class=\"card-subtitle text-muted\">Ireland</h6>\n          <div> <h2>{today}</h2></div>\n\n      </div>\n      </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Ticker\n      //    <div> <h2>{this.props.data[data.length-1].value}</h2></div>\n  //    <div> <h2>{this.props[5].value}</h2></div>\n","//apexC\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass ApxChrt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n      options: {\n        chart: {\n          id: \"Line-Chart\"\n        },\n        xaxis: {\n          categories: this.props.time_labels,\n        },\n        yaxis:{\n          forceNiceScale: false\n        }\n      },\n      series: [\n        {\n          name: this.props.name,\n          data: this.props.data\n        }\n      ]\n    };\n\n  }\n\n/*\n  componentDidMount(){\n    // Some code to account for the fact that the 'show duplicates' parameter breaks the graph when turned off.\n    // We just want to remove any repeated labels from our array\n    let i;\n    let label_tags = this.props.time_label;\n    console.log(\"Here is the data\" + this.props.time_label);\n\n    for(i =0; i< this.props.time_label; i++){\n      if (label_tags[i] == label_tags[i+1]){\n        label_tags[i+1] = ' ';\n      }\n    }\n\n    this.setState({\n      categories: label_tags\n    })\nconsole.log(\"Here is the data\" + this.props.time_label);\n}\n*/\n  render() {\n\n\n    return (\n      <div class=\"opacity-5 shadow-sm\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">{this.props.name}</h5>\n          <h6 class=\"card-subtitle text-muted\">{this.props.time_series}</h6>\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.state.options}\n              series={this.state.series}\n              type=\"line\"\n              width=\"500\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ApxChrt;\n","//ApxHeat\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\n\n\nclass ApxRadar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const data = this.props.data;\n\n    this.state = {\n\n      series: [{\n        name: 'Series 1',\n        data: data,\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'radar',\n        },\n        dataLabels: {\n          enabled: true\n        },\n        plotOptions: {\n          radar: {\n            size: 140,\n            polygons: {\n              strokeColors: '#e9e9e9',\n              fill: {\n                colors: ['#f8f8f8', '#fff']\n              }\n            }\n          }\n        },\n\n        colors: ['#FF4560'],\n        markers: {\n          size: 4,\n          colors: ['#fff'],\n          strokeColor: '#FF4560',\n          strokeWidth: 2,\n        },\n        tooltip: {\n          y: {\n            formatter: function(val) {\n              return val\n            }\n          }\n        },\n        xaxis: {\n          categories: []\n        },\n        yaxis: {\n          tickAmount: 7,\n          labels: {\n            formatter: function(val, i) {\n              if (i % 2 === 0) {\n                return val\n              } else {\n                return ''\n              }\n            }\n          }\n        }\n      },\n\n\n    };\n  }\n\n  componentDidMount(){\n    // When the component mounts make sure that the days of the week reflect the days in teh array\n\n    let dateData  = [];\n    let daySeries = [];\n    let dateIn = this.props.date;\n\n    let j;\n\n    let dtObj;\n    let dtDay;\n    let weekDays = ['Sunday','Monday','Tuesday','Wednesday','Thrusday','Friday','Saturday'];\n\n    for(j=0; j<= dateIn.length-1; j++){\n      dtObj = new Date(dateIn[j]);\n      dtDay = dtObj.getDay();\n      dateData[j] = dtDay;\n      daySeries[j] = weekDays[dateData[j]];\n    }\n    console.log(daySeries);\n\n    this.setState({\n      options: {\n        xaxis: {\n          categories: daySeries\n              }\n            }\n          })\n  }\n\n  render() {\n\n    return (\n      <div class=\"opacity-5 shadow\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">{this.props.name}</h5>\n          <h6 class=\"card-subtitle text-muted\">{this.props.time_series}</h6>\n        <div id=\"chart\">\n          <Chart options={this.state.options} series={this.state.series} type=\"radar\" height={350} />\n        </div>\n      </div>\n    </div>\n    );\n  }\n}\n\n  export default ApxRadar\n","/* //Original Imports\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n*/\n// Import React\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\n// Import p5\n//import P5Wrapper from 'react-p5-wrapper';\n//import boxMap from './components/p5skt/boxMap';\n//import ballMap from './components/p5skt/ballMap';\n\n// Import d3\n/*\nimport * as d3 from \"d3\";\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { line, curveMonotoneX } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition';\n*/\n\n// Import Tone\nimport * as Tone from 'tone';\n\n// Import Components\n//import XYAxis from './components/axis/xy-axis.js';\n//import Line from './components/line/line.js';\nimport Navbar from './components/navBar.js';\n\n//Import sonification components\n// SonifyOne and sonifyTwo represent 2 different mapping strategies\n//import SonifyOne from './components/sonify1.js';\nimport SonifyTwo from './components/sonify2.js';\nimport SonifyThree from './components/sonify3.js';\nimport SonifyFourNoise from './components/sonify4_noise.js';\n\n\n// Data Ticker Imports\nimport Ticker from './components/ticker.js';\n\n//  Chart Imports\n//import BarChart from './components/charts/bar.js';\nimport ApxChrt from './components/charts/apxChrt.js';\n//import ApxHeat from './components/charts/apxHeat.js';\nimport ApxRadar from './components/charts/apxRadar.js';\n// Import Audio  to play\nimport AudioPlay from './scripts/audioPlay.js';\n\n// Import Bootstrap\nimport 'bootstrap/dist/css/bootstrap.css';\n// Impiort Css and Images\nimport logo from './logo.svg';\nimport './App.css';\n\n//Time = Date.now() //epoch\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      width: 0,\n      height: 0,\n      data: [],\n\n      date_series: [], // Dates for 7 day week\n      full_date_series: [], //Dates for full series\n      total_death_series: [], //total death series\n      total_cases_series: [], //total case series\n\n      confirmed_deaths_series: [], //confirmed deaths series\n      confirmed_cases_series: [], //confirmed cases series\n\n      full_death_series:[],\n      full_case_series:[],\n\n      full_months: [],\n      seven_days:[],\n\n      today_tot_deaths:0, //today's total deaths\n      today_tot_cases:0,  //today's total cases\n      today_con_deaths:0, //today's confirmed deaths\n      today_con_cases:0,  //today's confirmed deaths\n    }\n  }\n\n  componentDidMount(){\n    // Get COVID-19 Total Deaths, Total Confirmed Cases and Dates\n  fetch('https://services1.arcgis.com/eNO7HHeQ3rUcBllm/arcgis/rest/services/CovidStatisticsProfileHPSCIrelandOpenData/FeatureServer/0/query?where=1%3D1&outFields=Date,TotalConfirmedCovidCases,ConfirmedCovidCases,ConfirmedCovidDeaths,TotalCovidDeaths&returnGeometry=false&outSR=4326&f=json') // use a header for the api keey value pair\n    .then(res => res.json())\n    .then(\n      (result) => {\n//Process data on result\n// 7 day data\n        let tot_d = []; // total deaths\n        let tot_c = []; // total cases\n\n        let con_d = []; // confirmed deaths\n        let con_c = []; // confirmed cases\n\n        let date = []; //date\n        let seven_days =[];\n\n// 7 day data parsing and organisation\n        let i;\n        for (i=0; i < 7;i++){\n          tot_d[i] = result.features[result.features.length-(1+i)].attributes.TotalCovidDeaths;\n\n          tot_c[i]  = result.features[result.features.length-(1+i)].attributes.TotalConfirmedCovidCases;\n\n          con_d[i] = result.features[result.features.length-(1+i)].attributes.ConfirmedCovidDeaths;\n          con_c[i] = result.features[result.features.length-(1+i)].attributes.ConfirmedCovidCases;\n\n          date[i] = result.features[result.features.length-(1+i)].attributes.Date;\n        }\n\n// 7 day data Date Conversion from Unix Timestamp arrays to to arrays of JS ddate/time objects.\n      let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; // needed for parsing month data apparently....\n\n      let k; // there a lott going on here. I'm converting from Unix time to date/time objects , extractng the day number and indexing into an array of day lables with that number\n      for(k=0; k< date.length; k++){\n        date[k] = new Date(date[k]);\n        seven_days[k] = days.[date[k].getDay()];\n      }\n\n/*      let n;\n      for(n=0; n< date.length; n++){\n        seven_days[n] = date[n].getDay();\n\n      }\n*/\n\n// All time data\n        let full_d =[]; // All time total deaths\n        let full_c =[]; // All time total cases\n\n        let full_date =[];\n        let full_months =[];\n\n// All time data parsing and organisation\n        let j;\n        let data_length = result.features.length;\n        for (j=0; j < data_length; j++){\n\n          full_d[j] = result.features[result.features.length-(1+j)].attributes.TotalCovidDeaths;\n          full_c[j]  = result.features[result.features.length-(1+j)].attributes.TotalConfirmedCovidCases;\n          full_date[j] = result.features[result.features.length-(1+j)].attributes.Date;\n\n        }\n// All time  data Date Conversion from Unix Timestamp arrays to to arrays of JS ddate/time objects.\n// there a lott going on here. I'm converting from Unix time to date/time objects , extractng the month number and indexing into an array of month lables with that number\n        let months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ]; // needed for parsing month data apparently....\n        let l;\n        for(l=0; l< full_date.length; l++){\n          full_date[l] = new Date(full_date[l]);\n          full_months[l] = months[full_date[l].getMonth()];\n        }\n\n// Remove repeated labels. Need to do this here as the option for showing repeated labels in apx charts breaks the render\n        let z;\n        let new_ar =[];\n\n        for(z=1; z < full_months.length; z++){\n\n          if (full_months[z] == full_months[z-1]){\n            new_ar[z] = full_months[z];\n            new_ar[z-1] = '';\n          } else{\n            new_ar[z] = '';\n            new_ar[z-1] = full_months[z-1];\n\n          }\n        }\n        full_months = new_ar;\n\n\n        // NB. Need to reverse these array as we filled them backwards from the end of the original data\n        // I just reverse the arrays below when we set state.\n        // So I'm reversing these as I load them into state.\n        //Be careful to account for todays data when doing This\n        // don't accidentally pull the figures from a week ago for today\n        //also, should probably change that don't remembe the reasoning behind this.\n        // And another thing!. Should really just do one big data process then just take the 1st 7 places of the larger\n        // arrays for the 7 day values.\n\n\n      this.setState({\n        isLoaded: true,\n        data: result,\n        total_deaths_series: tot_d.reverse(),\n        total_case_series:  tot_c.reverse(),\n        full_death_series: full_d.reverse(),\n        full_case_series: full_c.reverse(),\n        confirmed_deaths_series: con_d.reverse(),\n        confirmed_cases_series: con_c.reverse(),\n        today_tot_deaths: tot_d[tot_d.length -1],\n        today_tot_cases:  tot_c[tot_c.length -1],\n        today_con_deaths: con_d[con_d.length -1],\n        today_con_cases: con_c[con_c.length -1],\n        date_series: date.reverse(),\n        full_date_series: full_date.reverse(),\n        full_months: full_months.reverse(),\n        seven_days: seven_days.reverse(),\n        width:400,\n        height:200,\n\n      }, () => console.log(\"Confirmed Deaths: \" +con_d+\" Confirmed Cases: \"+con_c+ \" Total deaths: \" + this.state.today_tot_deaths +\" Total cases: \"+ this.state.today_tot_cases +\" Today's deaths: \"+ this.state.today_con_deaths +\" Today's cases:  \"+ this.state.today_con_cases ));\n\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n// Start the audio:\nTone.start(); // no audio will play at all until we initiate tone.\nTone.Transport.stop();\nTone.Transport.start();\n\n  }\n\n\n  render() {\n  let total_deaths = this.state.total_deaths;\n  let total_cases = this.state.total_cases;\n\n  const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n   return (\n      <div class=\"container-fluid\">\n      {<Navbar />}\n\n        <div class=\"row\">\n          <div class=\"col-sm mt-3 mb-3\">\n                 {<ApxChrt\n                 data={this.state.total_case_series}\n                 date={this.state.date_series}\n                 time_labels= {this.state.seven_days}\n                 time_series = {\"Past 7 Days\"}\n                 name= {\"Total Confirmed Cases\"}\n                 />}\n          {<SonifyTwo title = {\"Sonify Data\"} data={this.state.total_case_series}/>}\n\n          </div>\n\n          <div class=\"col-sm  mt-3 mb-3\">\n          {<Ticker data={this.state.today_con_cases} name ={\"New Cases\"} />}\n          {<Ticker data={this.state.today_con_deaths} name ={\"New Deaths\"} />}\n\n          </div>\n\n          <div class=\"col-sm  mt-3 mb-3\">\n          {<Ticker data={this.state.today_tot_cases} name ={\"Total Cases\"} />}\n          {<Ticker data={this.state.today_tot_deaths} name ={\"Total Deaths\"} />}\n\n          </div>\n\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-sm  mt-3 mb-3\">\n\n\n               <ApxChrt\n               data={this.state.total_deaths_series}\n               date={this.state.date_series}\n               time_labels= {this.state.seven_days}\n               time_series = {\"Past 7 Days\"}\n               name= {\"Total Confirmed Deaths\"}/>\n               {<SonifyThree title = {\"Sonify Data\"} data={this.state.total_deaths_series}/>}\n\n            </div>\n\n            <div class=\"col-sm mt-3 mb-3\">\n            <ApxRadar\n            type= \"radar\"\n            name ={\"New COVID-19 Cases\"}\n            data={this.state.confirmed_cases_series}\n            time_labels= {this.state.seven_days}\n            time_series = {\"Past 7 Days\"}\n            date={this.state.date_series}/>\n            {<SonifyTwo title = {\"Sonify Data\"} data={this.state.confirmed_cases_series} />}\n            </div>\n        </div>\n\n        <div class=\"row\">\n        <div class=\"col-sm mt-3 mb-3\">\n        <ApxChrt\n        data={this.state.full_case_series}\n        date={this.state.full_date_series}\n        time_labels= {this.state.full_months}\n        time_series = {\"Since Start of Pandemic\"}\n        name= {\"All Confirmed Cases\"} />\n\n          <div class=\"opacity-5 shadow-lg\">\n            <div class=\"card-body\">\n              <h5 classs=\"card-title\">Sonification of all Cases to Date</h5>\n              <h6 class=\"card-subtitle text-muted\">Ireland</h6>\n              <div className=\"mixed-chart\">\n              {<SonifyFourNoise title = {\"Sonify Data\"} data={this.state.full_case_series}/>}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm mt-3 mb-3\">\n    <ApxChrt\n    data={this.state.full_death_series}\n    date={this.state.full_date_series}\n    time_labels= {this.state.full_months}\n    time_series = {\"Since Start of Pandemic\"}\n    name= {\"All Confirmed Deaths\"}/>\n\n      <div class=\"opacity-5 shadow-lg\">\n        <div class=\"card-body\">\n          <h5 classs=\"card-title\">Sonification of all Deaths to Date</h5>\n          <h6 class=\"card-subtitle text-muted\">Ireland</h6>\n          <div className=\"mixed-chart\">\n          {<SonifyFourNoise title = {\"Sonify Data\"} data={this.state.full_death_series}/>}\n      </div>\n    </div>\n  </div>\n</div>\n\n  </div>\n</div>\n        );\n    }\n  }\n}\nexport default App;\n//\n//  <ApxChrt data={total_deaths} width={this.state.width} height={this.state.height} />\n// <BarChart data={total_deaths} width={this.state.width} height={this.state.height} />\n//            <ApxHeat type= \"heatmap\" name ={\"Covid Heatmap\"}/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}